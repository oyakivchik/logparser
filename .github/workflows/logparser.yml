name: Log-Parser

on:
  schedule:
    - cron:  '0 */4 * * *'
  workflow_dispatch:

jobs:
  logparser:
    runs-on: ubuntu-latest

    steps:
      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" >> ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Download logfile
        run: |
          scp ${USER}@${HOST}:/opt/testuser/logfile.log ./
        env:
          USER: ${{ secrets.USER }}
          HOST: ${{ secrets.HOST }}
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Get parsed data
        run: |
          python logparser_sql.py logfile.log
          python logparser_sql_orm.py logfile.log
          python logparser_pd.py logfile.log
          python logparser_pd_formated.py logfile.log
      - name: Copy results to the remote host over SSH
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.PORT }}
          source: "output/"
          target: "/home/testuser/oyakivchik/lesson7/"
          strip_components: 1
      - name: Email report
        run: |
          python send_email.py
        env:
          SENDER_EMAIL: ${{ secrets.SENDER_EMAIL }}
          RECEIVER_EMAIL: ${{ secrets.RECEIVER_EMAIL }}
          EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
          SMTP_SERVER: ${{ secrets.SMTP_SERVER }}
          SMTP_PORT: ${{ secrets.SMTP_PORT }}
      - name: Cleanup SSH directory
        run: |
          rm -r ~/.ssh
